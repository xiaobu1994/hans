###################  hans配置 QAQ ###################
#是否开启swagger (true/false)
hans.swagger-open=true
#是否开启登录时验证码 (true/false)
hans.kaptcha-open=false
#是否开启session超时验证操作
hans.session-open=true
#是否开启spring session,如果是多机环境需要开启(true/false)
hans.spring-session-open=false
#session失效时间 30分钟只在单机环境下生效，多机环境在SpringSessionConfig类中配置)
hans.session-invalidate-time=1800
#多久检测一次失效的session(只在单机环境下生效) 单位：秒
hans.session-validation-interval=900
#上传文件路径
hans.file_upload_path=F://upload

#端口
server.port=8888

###################  MyBatis 配置  ###################
#输出sql语句
logging.level.com.xiaobu.mapper=debug
#实体类
mybatis.type-aliases-package=com.xiaobu.entity
# 驼峰命名规范 如：数据库字段是  order_id 那么 实体字段就要写成 orderId （反之亦然）不然会报错
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapper-locations=classpath:com/xiaobu/mapper/xml/*.xml
#mapper
mapper.mappers=com.xiaobu.common.mapper.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

# pagehelper
pagehelper.helper-dialect=mysql
#pagehelper.reasonable： 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时
# 会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable==true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql

###################  beetl配置  ###################
#开始结束标签(yaml不允许@开头)
beetl.delimiter-statement-start=\@
beetl.delimiter-statement-end=null
#自定义标签文件Root目录和后缀
beetl.resource-tagroot=common/tags
beetl.resource-tagsuffix=tag
#是否检测文件变化,开发用true合适，但线上要改为false
beetl.resource-auto-check=true



#解决中文乱码
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true
spring.http.encoding.charset=UTF-8
spring.messages.encoding=UTF-8
spring.mvc.static-path-pattern=/static/**
spring.mvc.view.prefix=/WEB-INF/view
#json格式
spring.http.converters.preferred-json-mapper=fastjosn
#=====================文件上传======================================
# 是否支持批量上传   (默认值 true)
spring.servlet.multipart.enabled=true
# 上传文件的临时目录 （一般情况下不用特意修改）
spring.servlet.multipart.location=
# 上传文件最大为 1M （默认值 1M 根据自身业务自行控制即可）
spring.servlet.multipart.max-file-size=10MB
# 上传请求最大为 10M（默认值10M 根据自身业务自行控制即可）
spring.servlet.multipart.max-request-size=20MB
# 文件大小阈值，当大于这个阈值时将写入到磁盘，否则存在内存中，（默认值0 一般情况下不用特意修改）
spring.servlet.multipart.file-size-threshold=0
# 判断是否要延迟解析文件（相当于懒加载，一般情况下不用特意修改）
spring.servlet.multipart.resolve-lazily=false
#=====================热编译配置======================================
#开启热编译
spring.devtools.restart.enabled=true
spring.devtools.restart.additional-paths=src/main/java
spring.devtools.restart.exclude=static/**,WEB-INF/view/**


# mysql配置
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/hans?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull

#log
logging.config=classpath:logback-spring.xml

#druid datasource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=5
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.testOnReturn=true
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.poolPreparedStatements=false
#要启用PSCache，必须配置大于0
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=-1
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;



#==========================测试可以 改成true 会自动启动================
spring.auto.openurl=true
spring.web.loginurl=http://localhost:${server.port}/login
spring.web.googleexcute=C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe




# 扫描的包路径,默认扫描所有
spring.swagger.base-package=com.xiaobu.controller
# 默认为 true
spring.swagger.enabled=true
#配置安全验证
spring.swagger.security.filter-plugin=false
# 配置账号密码
spring.swagger.security.username=hans
spring.swagger.security.password=hans

spring.swagger.title=hans
spring.swagger.description=hans项目
spring.swagger.version=V1.0
spring.swagger.contact.name=xiaobu
spring.swagger.host=localhost
spring.swagger.contact.url=127.0.0.1:8888
spring.swagger.license=许可证
spring.swagger.licenseUrl=许可证URL